name: C/C++ CI

on:
  push:
    branches: [master]
    paths:
    - 'src/**'
    - 'include/**'

  pull_request:
    branches: [master]

jobs:
  notification:
    runs-on: ubuntu-latest
    name: Notifications
    steps:
    - name: IRC notification
      uses: Gottox/irc-message-action@v1
      with:
        server: irc.uvt.nl
        channel: '#gitlama'
        nickname: surprise
        notice: true
        message: |-
          ${{ github.actor }} pushed ${{ github.event.ref }} ${{ github.event.compare }}

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - uses: actions/checkout@v2
      - name: Install Build Environment
        run: |
             if [ "$RUNNER_OS" == "Linux" ]; then
                sudo apt-get install pkg-config autoconf-archive
             else
                brew upgrade;
                brew install pkg-config;
                brew install autoconf-archive;
                brew install autoconf;
                brew install automake;
             fi
      - name: Install Dependencies
        run: |
             if [ "$RUNNER_OS" == "Linux" ]; then
                sudo apt-get install libicu-dev libxml2-dev libbz2-dev zlib1g-dev libtar-dev
             else
                brew install libxml2;
                brew install bzip2;
                brew install zlib;
                brew install libtar
             fi
      - name: bootstrap
        run: sh bootstrap.sh
      - name: configure
        run: ./configure
      - name: make
        run: make
      - name: install
        run: sudo make install
      - name: make check
        run: LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib make check
        continue-on-error: true
      - name: show log
        run: cat src/test-suite.log
#      - name: make distcheck
#        run: make distcheck
